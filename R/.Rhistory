province_state = `Province/State`,
country_region = `Country/Region`
) %>%
mutate(date = mdy(date)) %>%
group_by(country_region, date) %>%
summarise(recovered_n = sum(recovered_n)) %>%
ungroup()
recover <- recover %>%
arrange(date) %>%
group_by(country_region) %>%  ungroup()
recover <- recover %>% filter(country_region=='Vietnam')
recover <-recover[c('date','recovered_n')]
Vietnam <- merge(Vietnam,recover,by="date")
#https://rpubs.com/phamdinhkhanh/381826
fig <- plot_ly(Vietnam,x = ~date)
fig <- fig %>% add_lines(y = ~confirmed_n, name = "Confirmed")
fig <- fig %>% add_trace(y = ~confirmed_n, name = "Confirmed", type='bar',marker=list(opacity=0.8))
fig <- fig %>% add_lines(y = ~recovered_n, name = "Recovered")
fig <- fig %>% add_lines(y = ~deaths_n, name = "deaths")
fig <- fig %>% layout(
title = "Vietnam Timeseries",
xaxis = list(
rangeselector = list(
buttons = list(
list(
count = 7,
label = "1week",
step = "day",
stepmode = "todate"),
list(
count = 1,
label = "1 mo",
step = "month",
stepmode = "backward"),
list(
count = 3,
label = "3 mo",
step = "month",
stepmode = "backward"),
list(
count = 6,
label = "6 mo",
step = "month",
stepmode = "backward"),
list(
count = 1,
label = "1 yr",
step = "year",
stepmode = "backward"))),
rangeslider = list(type = "date")),
yaxis = list(title = "cases"))
fig
library(tidyverse)
library(lubridate)
library(ggplot2)
library(plotly)
theme_set(theme_minimal())
#ConfirmDataset
confirm_url<-'https://github.com/CSSEGISandData/COVID-19/raw/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'
confirm <- read_csv(confirm_url)
confirm <- confirm %>%
pivot_longer(-c(`Province/State`, `Country/Region`, Lat, Long),
names_to = "date",
values_to = "confirmed_n"
) %>%
select(-c(Lat, Long)) %>%
rename(
province_state = `Province/State`,
country_region = `Country/Region`
) %>%
mutate(date = mdy(date)) %>%
group_by(country_region, date) %>%
summarise(confirmed_n = sum(confirmed_n)) %>%
ungroup()
confirm <- confirm %>%
arrange(date) %>%
group_by(country_region) %>%
ungroup()
confirm <- confirm %>%
arrange(date) %>%
group_by(country_region) %>%
mutate(new_cases_n = confirmed_n - lag(confirmed_n, default = 0)) %>%
ungroup()
Vietnam <- confirm %>% filter(country_region == "Vietnam")
#Recovered
recover_url<-'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv'
recover<-read_csv(recover_url)
recover <- recover %>%
pivot_longer(-c(`Province/State`, `Country/Region`, Lat, Long),
names_to = "date",
values_to = "recovered_n"
) %>%
select(-c(Lat, Long)) %>%
rename(
province_state = `Province/State`,
country_region = `Country/Region`
) %>%
mutate(date = mdy(date)) %>%
group_by(country_region, date) %>%
summarise(recovered_n = sum(recovered_n)) %>%
ungroup()
recover <- recover %>%
arrange(date) %>%
group_by(country_region) %>%  ungroup()
recover <- recover %>%
arrange(date) %>%
group_by(country_region) %>%
mutate(new_recover = recovered_n - lag(recovered_n, default = 0)) %>%
ungroup()
recover <- recover %>% filter(country_region=='Vietnam')
recover <-recover[c('new_recover')]
Vietnam <- cbind(Vietnam,recover)
#Fig
ay <- list(
tickfont = list(color = "green"),
overlaying = "y",
side = "right",
title = "Recover cases")
fig <- plot_ly(Vietnam, x = ~date)
fig <- fig %>% add_trace(y = ~new_recover, name = "Recovered", yaxis = "y2", type='bar',
marker=list(opacity=0.5,color='green'),text =Vietnam$new_recover, textposition = 'auto')
fig <- fig %>% add_lines(y = ~new_cases_n, name = "Confirmed", yaxis='y1')
fig <- fig %>% add_trace(y = ~new_cases_n, name = "Confirmed", yaxis='y1', type = 'scatter',mode='text',
text =Vietnam$new_cases_n, textposition = 'auto')
fig <- fig %>% layout(
title = "Vietnam Timeseries newcases",
xaxis = list(
rangeselector = list(
buttons = list(
list(
count = 7,
label = "1week",
step = "day",
stepmode = "todate"),
list(
count = 1,
label = "1 mo",
step = "month",
stepmode = "backward"),
list(
count = 3,
label = "3 mo",
step = "month",
stepmode = "backward"),
list(
count = 6,
label = "6 mo",
step = "month",
stepmode = "backward"),
list(
count = 1,
label = "1 yr",
step = "year",
stepmode = "backward"))),
rangeslider = list(type = "date")),
yaxis2=ay)
fig
library(dplyr)
library(ggplot2)
library(plotly)
url='https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports_us/07-07-2021.csv'
df1 <- read.csv(url, header=TRUE)
df1<-df1[-c(3,10,11,14,15,40,45,53),]
df1$hover <- with(df1, paste(Province_State, '<br>',
"Confirmed", Confirmed,
"Deaths", Deaths, "<br>",
"Total Test results", Total_Test_Results))
#Statecode:
code <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
code <- code[c(1)]
df1 <- cbind(df1,code)
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(  scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
fig <- plot_geo(df1, locationmode = 'USA-states')
fig <- fig %>% add_trace(
z = ~Confirmed, text = ~hover, locations = ~code,
color = ~Confirmed, colors = 'Oranges'
)
fig <- fig %>% colorbar(title = "Confirmed")
fig <- fig %>% layout(
title = 'Covid19- US by State<br>(Confirmed)',
geo = g
)
fig
library(tidyverse)
library(lubridate)
library(ggplot2)
library(plotly)
theme_set(theme_minimal())
#ConfirmDataset
confirm_url<-'https://github.com/CSSEGISandData/COVID-19/raw/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'
confirm <- read_csv(confirm_url)
confirm <- confirm %>%
pivot_longer(-c(`Province/State`, `Country/Region`, Lat, Long),
names_to = "date",
values_to = "confirmed_n"
) %>%
select(-c(Lat, Long)) %>%
rename(
province_state = `Province/State`,
country_region = `Country/Region`
) %>%
mutate(date = mdy(date)) %>%
group_by(country_region, date) %>%
summarise(confirmed_n = sum(confirmed_n)) %>%
ungroup()
confirm <- confirm %>%
arrange(date) %>%
group_by(country_region) %>%
ungroup()
confirm <- confirm %>%
arrange(date) %>%
group_by(country_region) %>%
mutate(new_cases_n = confirmed_n - lag(confirmed_n, default = 0)) %>%
ungroup()
Vietnam <- confirm %>% filter(country_region == "Vietnam")
#Recovered
recover_url<-'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv'
recover<-read_csv(recover_url)
recover <- recover %>%
pivot_longer(-c(`Province/State`, `Country/Region`, Lat, Long),
names_to = "date",
values_to = "recovered_n"
) %>%
select(-c(Lat, Long)) %>%
rename(
province_state = `Province/State`,
country_region = `Country/Region`
) %>%
mutate(date = mdy(date)) %>%
group_by(country_region, date) %>%
summarise(recovered_n = sum(recovered_n)) %>%
ungroup()
recover <- recover %>%
arrange(date) %>%
group_by(country_region) %>%  ungroup()
recover <- recover %>%
arrange(date) %>%
group_by(country_region) %>%
mutate(new_recover = recovered_n - lag(recovered_n, default = 0)) %>%
ungroup()
recover <- recover %>% filter(country_region=='Vietnam')
recover <-recover[c('new_recover')]
Vietnam <- cbind(Vietnam,recover)
#Fig
ay <- list(
tickfont = list(color = "green"),
overlaying = "y",
side = "right",
title = "Recover cases")
fig <- plot_ly(Vietnam, x = ~date)
fig <- fig %>% add_trace(y = ~new_recover, name = "Recovered", yaxis = "y2", type='bar',
marker=list(opacity=0.5,color='green'),text =Vietnam$new_recover, textposition = 'auto')
fig <- fig %>% add_lines(y = ~new_cases_n, name = "Confirmed", yaxis='y1')
fig <- fig %>% add_trace(y = ~new_cases_n, name = "Confirmed", yaxis='y1', type = 'scatter',mode='text',
text =Vietnam$new_cases_n, textposition = 'auto')
fig <- fig %>% layout(
title = "Vietnam Timeseries newcases",
xaxis = list(
rangeselector = list(
buttons = list(
list(
count = 7,
label = "1week",
step = "day",
stepmode = "todate"),
list(
count = 14,
label = "2week",
step = "day",
stepmode = "todate"),
list(
count = 3,
label = "3 mo",
step = "month",
stepmode = "backward"),
list(
count = 6,
label = "6 mo",
step = "month",
stepmode = "backward"))),
rangeslider = list(type = "date")),
yaxis2=ay)
fig
library(tidyverse)
library(lubridate)
library(ggplot2)
library(plotly)
theme_set(theme_minimal())
#ConfirmDataset
confirm_url<-'https://github.com/CSSEGISandData/COVID-19/raw/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'
confirm <- read_csv(confirm_url)
confirm <- confirm %>%
pivot_longer(-c(`Province/State`, `Country/Region`, Lat, Long),
names_to = "date",
values_to = "confirmed_n"
) %>%
select(-c(Lat, Long)) %>%
rename(
province_state = `Province/State`,
country_region = `Country/Region`
) %>%
mutate(date = mdy(date)) %>%
group_by(country_region, date) %>%
summarise(confirmed_n = sum(confirmed_n)) %>%
ungroup()
confirm <- confirm %>%
arrange(date) %>%
group_by(country_region) %>%
ungroup()
confirm <- confirm %>%
arrange(date) %>%
group_by(country_region) %>%
mutate(new_cases_n = confirmed_n - lag(confirmed_n, default = 0)) %>%
ungroup()
Vietnam <- confirm %>% filter(country_region == "Vietnam")
#Recovered
recover_url<-'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv'
recover<-read_csv(recover_url)
recover <- recover %>%
pivot_longer(-c(`Province/State`, `Country/Region`, Lat, Long),
names_to = "date",
values_to = "recovered_n"
) %>%
select(-c(Lat, Long)) %>%
rename(
province_state = `Province/State`,
country_region = `Country/Region`
) %>%
mutate(date = mdy(date)) %>%
group_by(country_region, date) %>%
summarise(recovered_n = sum(recovered_n)) %>%
ungroup()
recover <- recover %>%
arrange(date) %>%
group_by(country_region) %>%  ungroup()
recover <- recover %>%
arrange(date) %>%
group_by(country_region) %>%
mutate(new_recover = recovered_n - lag(recovered_n, default = 0)) %>%
ungroup()
recover <- recover %>% filter(country_region=='Vietnam')
recover <-recover[c('new_recover')]
Vietnam <- cbind(Vietnam,recover)
#Fig
ay <- list(
tickfont = list(color = "green"),
overlaying = "y",
side = "right",
title = "Recover cases")
fig <- plot_ly(Vietnam, x = ~date)
fig <- fig %>% add_trace(y = ~new_recover, name = "Recovered", yaxis = "y2", type='bar',
marker=list(opacity=0.5,color='green'),text =Vietnam$new_recover, textposition = 'auto')
fig <- fig %>% add_lines(y = ~new_cases_n, name = "Confirmed", yaxis='y1')
fig <- fig %>% add_trace(y = ~new_cases_n, name = "Confirmed", yaxis='y1', type = 'scatter',mode='text',
text =Vietnam$new_cases_n, textposition = 'auto')
fig <- fig %>% layout(
title = "Vietnam Timeseries newcases",
xaxis = list(
rangeselector = list(
buttons = list(
list(
count = 7,
label = "1week",
step = "day",
stepmode = "todate"),
list(
count = 14,
label = "2week",
step = "day",
stepmode = "todate"),
list(
count = 3,
label = "3 mo",
step = "month",
stepmode = "backward"),
list(
count = 6,
label = "6 mo",
step = "month",
stepmode = "backward"))),
rangeslider = list(type = "date")),
yaxis2=ay)
fig
library(dplyr)
library(ggplot2)
library(plotly)
#Load Data
url = "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/07-01-2020.csv"
df <- read.csv(url, header = TRUE)
#Nhom du lieu
country <- df %>% group_by(Country_Region)
country <- country %>% summarise(Deaths = sum(Deaths))
#Sort
country <- country[order(-country$Deaths),]
country_n<-country[1:7,]
others=sum(country$Deaths)-sum(country_n$Deaths)
others<-data.frame("Others", others)
names(others)<-c("Country_Region","Deaths")
country <- rbind(country_n, others)
colnames(country)[2]<-'Year2020'
#2021
url = "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/07-01-2021.csv"
df <- read.csv(url, header = TRUE)
#Nhom du lieu
a <- df %>% group_by(Country_Region)
a<- a %>% summarise(Deaths = sum(Deaths))
#Sort
a <- a[order(-a$Deaths),]
a_n<-a[1:7,]
others=sum(a$Deaths)-sum(a_n$Deaths)
others<-data.frame("Others", others)
names(others)<-c("Country_Region","Deaths")
a <- rbind(a_n, others)
colnames(a)[2]<-'Year2021'
country<-merge(country,a,by='Country_Region')
fig <- plot_ly(country) %>%
add_pie(labels = ~Country_Region, values = ~Year2021, type = 'pie', hole = 0.7, sort = F,
textinfo = 'value+percent',
insidetextfont = list(color = 'white'),
hoverinfo = 'text', name='2021',
marker = list(line = list(color = 'white', width = 2)),
showlegend = TRUE) %>%
add_pie(labels = ~Country_Region, values = ~Year2020, name='2020',
textinfo = 'value+percent',insidetextfont = list(color = 'white'),
marker = list(line = list(color = 'white', width = 2), opacity = 0.8), hole=0.3,
domain = list(
x = c(0.15, 0.85),
y = c(0.15, 0.85)),
sort = F) %>%
layout(title = 'Deaths confirmed by Country region (07/07/2020 & 07/07/2021)')
fig
lst <- list() # creates an empty (length zero) list
lst[[1]] <- 3 # automagically extends the lst
lst[[2]] <- 4 # ditto
lst
lst[[1]] <- 3 # automagically extends the lst
lst[[2]] <- 4 # ditto
lst[2]<-2
lst
lst <- list() # creates an empty (length zero) list
lst[[1]] <- 3 # automagically extends the lst
lst[[2]] <- 4 # ditto
lst[2]<-2
lst
lst[[2]] <- 4 # ditto
lst
lst[3]<-2
lst
insertion_sort <- function(A){
for (j in 2:length(A)) {
key = A[j]
# insert A[j] into sorted sequence A[1,...,j-1]
i = j - 1
while (i > 0 && A[i] > key) {
A[(i + 1)] = A[i]
i = i - 1
}
A[(i + 1)] = key
}
A
}
x <- c(1,2,34,35,12,43,12,1)
insertion_sort(x)
library(data.tree)
# thiet lap cay
tree <- Node$new("A")
print(tree)
#Nhánh 1:
branch1 <- tree$AddChild("B")
tree
child1 <- branch1$AddChild("C")
child2 <- branch1$AddChild("D")
tree
# Nhánh 2
branch2 <- tree$AddChild("E")
tree
child3 <- branch2$AddChild("F")
branchchild <- child3$AddChild("G")
# Nhánh 3
branch3 <- tree$AddChild("H")
child5 <- branch3$AddChild("I")
# Nhánh 4
branch4 <- tree$AddChild("J")
print(tree)
# Duyet cay Truoc
tree$Get('level')
library(data.tree)
# thiet lap cay
tree <- Node$new("A")
#Nhánh 1:
branch1 <- tree$AddChild("B")
child1 <- branch1$AddChild("C")
child2 <- branch1$AddChild("D")
# Nhánh 2
branch2 <- tree$AddChild("E")
child3 <- branch2$AddChild("F")
branchchild <- child3$AddChild("G")
# Nhánh 3
branch3 <- tree$AddChild("H")
child5 <- branch3$AddChild("I")
# Nhánh 4
branch4 <- tree$AddChild("J")
print(tree)
# Duyet Cay sau
tree$Get('level', traversal = "post-order")
